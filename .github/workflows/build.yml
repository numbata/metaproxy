name: Build

on:
  workflow_call:
    outputs:
      linux_amd64:
        description: "Path to Linux AMD64 artifact"
        value: ${{ jobs.build.outputs.linux_amd64 }}
      darwin_amd64:
        description: "Path to macOS AMD64 artifact"
        value: ${{ jobs.build.outputs.darwin_amd64 }}
      darwin_arm64:
        description: "Path to macOS ARM64 artifact"
        value: ${{ jobs.build.outputs.darwin_arm64 }}

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    outputs:
      linux_amd64: ${{ steps.collect_artifacts.outputs.linux_amd64 }}
      darwin_amd64: ${{ steps.collect_artifacts.outputs.darwin_amd64 }}
      darwin_arm64: ${{ steps.collect_artifacts.outputs.darwin_arm64 }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: metaproxy
            asset_name: metaproxy-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: metaproxy
            asset_name: metaproxy-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: metaproxy
            asset_name: metaproxy-darwin-arm64
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build-${{ matrix.target }}"

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}.tar.gz
          if-no-files-found: error

      - name: Collect artifact paths
        id: collect_artifacts
        run: |
          if [ "${{ matrix.target }}" = "x86_64-unknown-linux-gnu" ]; then
            echo "linux_amd64=${{ matrix.asset_name }}.tar.gz" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.target }}" = "x86_64-apple-darwin" ]; then
            echo "darwin_amd64=${{ matrix.asset_name }}.tar.gz" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.target }}" = "aarch64-apple-darwin" ]; then
            echo "darwin_arm64=${{ matrix.asset_name }}.tar.gz" >> $GITHUB_OUTPUT
          fi
