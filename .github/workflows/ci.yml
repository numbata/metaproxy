name: CI/CD

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          rustup component add rustfmt clippy
      
      - name: Check formatting
        run: |
          source "$HOME/.cargo/env"
          cargo fmt --all -- --check
      
      - name: Clippy
        run: |
          source "$HOME/.cargo/env"
          cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: |
          source "$HOME/.cargo/env"
          cargo test --all-features

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"

      - name: Build binary
        run: |
          source "$HOME/.cargo/env"
          cargo build --release

      - name: Prepare artifact
        run: |
          cd target/release
          tar czvf ../../metaproxy-linux-amd64.tar.gz metaproxy
          cd -
